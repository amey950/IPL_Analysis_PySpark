Q) FIND THE TOTAL NUMBER OF MATCHES FOR WHICH DATA IS PRESENT IN THE DATASET

df.select('id').distinct().count()     /* IN DATASET EVERY MATCH IS REPRESENTED BY UNIQUE ID , 
                                          WE WILL BE USING IT FOR FINDING THE ANSWER */
---------------------------------------------------------------------------------------------------

Q) FIND THE NUMBER OF SIX HIT DURING THE ENTIRE COURSE OF IPL DATASET

a= df.where('batsman_runs == 6')
a.count()                             /* 8902 is the answer */
---------------------------------------------------------------------------------------------------
Q) FIND THE TOTAL 4s SCORED BY VIRAT KOHLI

a  = df.filter((df.batsman == 'V Kohli') & (df.batsman_runs == 4))
print(a.count())

/* 504 TOTAL 4s by VIRAT KOHLI */
---------------------------------------------------------------------------------------------------
Q) TOTAL RUNS SCORED BY VIRAT KOHLI

a = df.filter(df.batsman == 'V Kohli')
a.groupby(df.batsman).sum('batsman_runs').show()
---------------------------------------------------------------------------------------------------
Q) TOTAL RUNS SCORED BY KOHLI

a = df.filter(df.batsman == 'V Kohli')
a.select('id').distinct().count()    /*184 */

---------------------------------------------------------------------------------------------------

Q) FIND THE NUMBER OF DOT BALLS DURING ENTIRE COURSE 

a= df.where('total_runs == 0')
a.count()                         
---------------------------------------------------------------------------------------------------

Q) FIND OUT THE PLAYERS WHO HAVE SCORED MORE THAN 5000 RUNS IN ENTIRE IPL HISTORY

a = df.groupby('batsman').sum('batsman_runs')
b = a.filter('sum(batsman_runs) > 5000')
b.show()

+---------+-----------------+
|  batsman|sum(batsman_runs)|
+---------+-----------------+
|RG Sharma|             5230|
| S Dhawan|             5197|
| SK Raina|             5368|
|DA Warner|             5254|
|  V Kohli|             5878|
+---------+-----------------+

---------------------------------------------------------------------------------------------------

Q)  HOW MANY CENTURIES HAVE BEEN SCORED IN IPL 

a = df.groupby('id','batsman').sum('batsman_runs')
b = a.filter('sum(batsman_runs) >= 100')
b.count()

/* 63 CENTURIES SO FAR */
---------------------------------------------------------------------------------------------------

Q) FIND THE MAXIMUM SCORE BY BATSMAN IN SINGLE INNING 

a = df.groupby('id','batsman').sum('batsman_runs')
b = a.filter('sum(batsman_runs) >= 100')
b.agg({'sum(batsman_runs)' : 'max'}).show()

/* 175 runs */

---------------------------------------------------------------------------------------------------

Q) FIND THE NUMBER OF PLAYERS WHO HAVE SCORED CENTURY (DO NOT COUNT PLAYER TWICE IF HE HAS SCORED MORE THAN 1 CENTURY)

a = df.groupby('id','batsman').sum('batsman_runs')
b = a.filter('sum(batsman_runs) >= 100')
c = b.select('batsman').distinct()
c.count()

/* 36 PLAYERS HAVE SCORED CENTURY */

---------------------------------------------------------------------------------------------------

Q) FIND THE PLAYER HWO HAVE SCORED MAXIMUM NUMBER OF CENTURIES AND MENTION NUMBER OF CENTURIES

a = df.groupby('id','batsman').sum('batsman_runs')
b = a.filter('sum(batsman_runs) >= 100')
c = b.groupBy('batsman').count()
d = c.sort(("count"))
d.tail(1)
---------------------------------------------------------------------------------------------------

Q) FIND the 5 BOWLERS WHO HAVE GIVE MAXIMUM NUMBER OF WIDE AND NO BALLS

a = df.filter((df.extras_type == 'wides') | (df.extras_type == 'noballs'))
b = a.groupby('bowler').count().sort(('count'))
b.tail(5)

bowler='SR Watson', count=108),
 Row(bowler='P Kumar', count=113),
 Row(bowler='UT Yadav', count=119),
 Row(bowler='DJ Bravo', count=134),
 Row(bowler='SL Malinga', count=146)

---------------------------------------------------------------------------------------------------

Q) FIND THE 5 BATSMAN WHO HAVE FACED MOST BALLS 

a = df.groupby('batsman').count().sort(('count')) 
a.tail(5)

[Row(batsman='DA Warner', count=3819),
 Row(batsman='SK Raina', count=4041),
 Row(batsman='RG Sharma', count=4088),
 Row(batsman='S Dhawan', count=4208),
 Row(batsman='V Kohli', count=4609)]

---------------------------------------------------------------------------------------------------

Q) HOW MANY MATCHES PAYED BY VIRAT KOHLI

a = df.filter(df.batsman == 'V Kohli')
b= a.select('id').distinct()
b.count()                            /* 184 MATCHES */
---------------------------------------------------------------------------------------------------

Q) FIND THE TOP 10 INNINGS OF VIRAT KOHLI

a = df.groupby('id','batsman').sum('batsman_runs')
b = a.filter(a.batsman == 'V Kohli')
c = b.sort(('sum(batsman_runs)'))
c.tail(10)

/* this code can be used to find the top 10 innings of any player , just replace name of 'V Kohli' and put other name */ 
---------------------------------------------------------------------------------------------------

Q) FIND THR TOTAL RUNS SCORED BY CHRIS GAYLE

a = df.filter(a.batsman == 'CH Gayle')
b = a.groupby('batsman').sum('batsman_runs')
b.show()      

/* or */

a = df.groupby('batsman').sum('batsman_runs')
b = a.filter(a.batsman == 'V Kohli')
b.show()

---------------------------------------------------------------------------------------------------
Q) FIND THE NUMBER OF BOUNDRIES SCORED BY C GAYLE

a = df.filter(a.batsman == 'CH Gayle')
b = a.filter((a.batsman_runs == 6) | (a.batsman_runs == 4))
b.count()                                                              /*  733 */ 
---------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 INNINGS AND BATSMAN WHERE HIGHEST NUMBER OF BOUNDRIES WERE SCORED

a = df.filter((df.batsman_runs == 6) | (df.batsman_runs == 4))
b = a.groupby('id','batsman').count()
c = b.sort(('count')).tail(5);
c

[Row(id=980987, batsman='AB de Villiers', count=22),
 Row(id=1136602, batsman='RR Pant', count=22),
 Row(id=335982, batsman='BB McCullum', count=23),
 Row(id=829795, batsman='AB de Villiers', count=23),
 Row(id=598027, batsman='CH Gayle', count=30)]

---------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 INNINGS WHERE THE SCORE WAS MAXIMUM , MENTION TEAMS , INNINGS , ID

a = df.groupby('id', 'inning', 'batting_team').sum('total_runs').sort(('sum(total_runs)')).tail(5)
a 

[Row(id=335983, inning=1, batting_team='Chennai Super Kings', sum(total_runs)=240),
 Row(id=1136604, inning=1, batting_team='Kolkata Knight Riders', sum(total_runs)=245),
 Row(id=419137, inning=1, batting_team='Chennai Super Kings', sum(total_runs)=246),
 Row(id=980987, inning=1, batting_team='Royal Challengers Bangalore', sum(total_runs)=248),
 Row(id=598027, inning=1, batting_team='Royal Challengers Bangalore', sum(total_runs)=263)]
---------------------------------------------------------------------------------------------------

Q) FIND THE HIGHRST WICKET TAKERS , LIST TOP 5

a = df.filter(df.is_wicket == 1)
b = a.groupby('bowler').count().sort(('count')).tail(5)
b

[Row(bowler='Harbhajan Singh', count=161),
 Row(bowler='PP Chawla', count=164),
 Row(bowler='A Mishra', count=169),
 Row(bowler='DJ Bravo', count=175),
 Row(bowler='SL Malinga', count=188)]
---------------------------------------------------------------------------------------------------

Q) FIND THE DATA ABOUT HOW 'V KOHLI'  GOT OUT

a = df.filter((df.is_wicket == 1) & (df.batsman == 'V Kohli'))
b = a.groupby('dismissal_kind').count().sort(('count'))
b.show()

+-----------------+-----+
|   dismissal_kind|count|
+-----------------+-----+
|          stumped|    3|
|caught and bowled|    3|
|              lbw|    7|
|          run out|   15|
|           bowled|   30|
|           caught|  105|
+-----------------+-----+
------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 4 TEAMS AGAINS WHICH V KOHLI HAVE SCORED MAXIMUM RUNS

a = df.filter(df.batsman == 'V Kohli')
b = a.groupby('bowling_team').sum('total_runs').sort('sum(total_runs)').tail(4)
b

/* or */

a = df.filter(df.batsman == 'V Kohli')
b = a.groupby('bowling_team').sum('total_runs').sort('sum(total_runs)', ascending = False).head(4)
b


[Row(bowling_team='Kings XI Punjab', sum(total_runs)=709),
 Row(bowling_team='Kolkata Knight Riders', sum(total_runs)=738),
 Row(bowling_team='Delhi Daredevils', sum(total_runs)=787),
 Row(bowling_team='Chennai Super Kings', sum(total_runs)=924)]

------------------------------------------------------------------------------------------------------------
Q) FIND THE TOP 4 WICKET CATCHER / FIELDER 

df.groupby('fielder').count().sort(('count'), ascending = False).head(4)

Row(fielder='MS Dhoni', count=164),
 Row(fielder='KD Karthik', count=156),
 Row(fielder='RV Uthappa', count=123),
 Row(fielder='AB de Villiers', count=117)]
------------------------------------------------------------------------------------------------------------

Q)  TOP 5 HIGHEST RUN SCORED IN INNING = 2

a = df.filter(df.inning == 2)
b= a.groupby('batting_team', 'id').sum('total_runs').sort(('sum(total_runs)'), ascending = False).head(5)
b

[Row(batting_team='Rajasthan Royals', id=1216527, sum(total_runs)=226),
 Row(batting_team='Rajasthan Royals', id=419137, sum(total_runs)=223),
 Row(batting_team='Mumbai Indians', id=1082641, sum(total_runs)=223),
 Row(batting_team='Rajasthan Royals', id=335990, sum(total_runs)=217),
 Row(batting_team='Delhi Daredevils', id=1082632, sum(total_runs)=214)]

/* ALL THE ABOVE MATCHES HAVE BEEN LOST BY TEAM PLAYING IN INNING 2 */
/* HIGHEST RUNS MADE WHILE CHASING IS 226 , MEANS IF FIRST INNING TEAM CAN SCORE 226+, IT WILL HAVE HIGHEST CHANCES OF WINNING */
------------------------------------------------------------------------------------------------------------
Q) FIND THE HIGHEST SCORES WHEN PLAYING IN FIRST INNINGS

c = df.filter(df.inning == 1)
d  = c.groupby('batting_team', 'id').sum('total_runs').sort(('sum(total_runs)'), ascending = False).head(5)
d

 [Row(batting_team='Royal Challengers Bangalore', id=598027, sum(total_runs)=263),
 Row(batting_team='Royal Challengers Bangalore', id=980987, sum(total_runs)=248),
 Row(batting_team='Chennai Super Kings', id=419137, sum(total_runs)=246),
 Row(batting_team='Kolkata Knight Riders', id=1136604, sum(total_runs)=245),
 Row(batting_team='Chennai Super Kings', id=335983, sum(total_runs)=240)]
------------------------------------------------------------------------------------------------------------

Q) FIND THE 5 MOST EXPENSIVE OVERS AS COLLECTIVELY

a = df.groupby('over').sum('total_runs').sort(('sum(total_runs)'), ascending = False).head(5)
a

[Row(over=17, sum(total_runs)=14307),
 Row(over=16, sum(total_runs)=13989),
 Row(over=18, sum(total_runs)=13804),
 Row(over=5, sum(total_runs)=13470),
 Row(over=15, sum(total_runs)=13449)]

/* HERE WE CAN SAY THAT OVERS 15,16,17,18 ARE VERY EXPENSIVE */
------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 BATSMAN AND INNINGS WHERE HIGHEST NUMBER OF SIXERS WERE HIT

a  = df.filter(df.batsman_runs == 6)
b = a.groupBy('id','batsman').count().sort(('count'), ascending = False)
b.show(5)

+-------+--------------+-----+
|     id|       batsman|count|
+-------+--------------+-----+
| 598027|      CH Gayle|   17|
| 335982|   BB McCullum|   13|
| 548372|      CH Gayle|   13|
| 829785|      CH Gayle|   12|
| 980987|AB de Villiers|   12|
------------------------------------------------------------------------------------------------------------

Q) WRITE A CODE TO FIND NUMBER OF 6 SCORED BY ALL TEAMS

a = df.filter('batsman_runs == 6')
b = a.groupby(df.batting_team).count().show()
b

+--------------------+-----+
|        batting_team|count|
+--------------------+-----+
| Chennai Super Kings| 1050|
|     Deccan Chargers|  400|
|    Rajasthan Royals|  784|
|Royal Challengers...| 1197|
|Kolkata Knight Ri...| 1017|
|     Kings XI Punjab| 1073|
|    Delhi Daredevils|  800|
|      Mumbai Indians| 1234|
| Sunrisers Hyderabad|  610|
|Kochi Tuskers Kerala|   53|
|       Pune Warriors|  196|
|Rising Pune Super...|   89|
|       Gujarat Lions|  155|
|Rising Pune Super...|   68|
|      Delhi Capitals|  176|
------------------------------------------------------------------------------------------------------------

Q) FIND THE TOTAL MATCHES PLAYED BY MUMBAI INDIANS

a = df.filter(df.batting_team == 'Mumbai Indians')
a.select('id').distinct().count()

/* 203  */
------------------------------------------------------------------------------------------------------------

Q) FIND THE PERCENTAGE WHEN MUMBAI INDIANS HAVE BATTED FIRST

a = df.filter((df.batting_team == 'Mumbai Indians') & (df.inning == 2))
first = a.select('id').distinct().count()
abc = df.filter((df.batting_team == 'Mumbai Indians'))
total = abc.select('id').distinct().count()

print(first/total)

------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 OVERS IN WHICH HIGHEST RUNS WERE SCORED

df.groupby('over').sum('total_runs').orderBy(('sum(total_runs)')).tail(5)

 [Row(over=15, sum(total_runs)=13449),
 Row(over=5, sum(total_runs)=13470),
 Row(over=18, sum(total_runs)=13804),
 Row(over=16, sum(total_runs)=13989),
 Row(over=17, sum(total_runs)=14307)]

------------------------------------------------------------------------------------------------------------

Q) FIND THE OVERS WHERE HIGHEST NUMBER OF 6 WERE HIT

a = df.filter('batsman_runs == 6')
a.groupby('over').count().orderBy('count').tail(5)

 [Row(over=15, count=585),
 Row(over=16, count=596),
 Row(over=17, count=704),
 Row(over=18, count=704),
 Row(over=19, count=706)]
------------------------------------------------------------------------------------------------------------
Q) FIND OUT WHICH OF THE INNINGS HAVE MORE 6s

a = df.filter('batsman_runs == 6')
a.groupby('inning').count().show()

+------+-----+
|inning|count|
+------+-----+
|     1| 4701|
|     2| 4201|
+------+-----+
------------------------------------------------------------------------------------------------------------

Q) FIND THE TOTAL CENTURIES HAVE BEEN SCORED IN INNING 1 AND INNING 2

a = df.filter('inning == 1')
b = a.groupby(['id','batsman']).sum('batsman_runs')
first_inning_centuries = b.filter('sum(batsman_runs) >= 100').count()
first_inning_centuries                                                       /* 45 centuries in first inning */

a = df.filter('inning == 2')
b = a.groupby(['id','batsman']).sum('batsman_runs')
second_inning_centuries = b.filter('sum(batsman_runs) >= 100').count()
second_inning_centuries                                                   /* 18 centuries in second inning */
------------------------------------------------------------------------------------------------------------

Q) FIND THE WICKETS TAKEN IN BOTH INNINGS 

a = df.filter('is_wicket == 1')
b = a.groupby('inning').count()
b.show()

+------+-----+
|inning|count|
+------+-----+
|     1| 4938|
|     2| 4557|
+------+-----+
------------------------------------------------------------------------------------------------------------

Q) FIND THE 5 TEAMS WHICH HAVE TAKEN HIGHEST WICKETS

a = df.filter('is_wicket == 1')
a.groupby('bowling_team').count().orderBy('count').tail(5)

Out[90]: [Row(bowling_team='Kings XI Punjab', count=1070),
 Row(bowling_team='Kolkata Knight Riders', count=1079),
 Row(bowling_team='Chennai Super Kings', count=1104),
 Row(bowling_team='Royal Challengers Bangalore', count=1115),
 Row(bowling_team='Mumbai Indians', count=1237)]
------------------------------------------------------------------------------------------------------------

Q) FIND THE TEAM WHICH HAS TAKEN HIGHEST HIGHEST WICKETS IN INNINGS 2

a = df.filter('is_wicket == 1')
b = a.filter('inning == 2')
b.groupby('bowling_team').count().orderBy('count').tail(5)

[Row(bowling_team='Kolkata Knight Riders', count=486),
 Row(bowling_team='Royal Challengers Bangalore', count=515),
 Row(bowling_team='Kings XI Punjab', count=519),
 Row(bowling_team='Chennai Super Kings', count=571),
 Row(bowling_team='Mumbai Indians', count=671)]

------------------------------------------------------------------------------------------------------------

Q) FIND THE TEAMS WHICH HAVE SCORED HIGHEST RUNS IN LAST 5 OVERS

a = df.filter(df.over.isin(15,16,17,18,19))
a.groupby('batting_team').sum('total_runs').orderBy('sum(total_runs)').tail(5)

[Row(batting_team='Kolkata Knight Riders', sum(total_runs)=7777),
 Row(batting_team='Kings XI Punjab', sum(total_runs)=7875),
 Row(batting_team='Chennai Super Kings', sum(total_runs)=8180),
 Row(batting_team='Royal Challengers Bangalore', sum(total_runs)=8495),
 Row(batting_team='Mumbai Indians', sum(total_runs)=9312)]

------------------------------------------------------------------------------------------------------------

Q) FIND THE TEAMS WHICH HAVE SCORED HIGHEST RUNS IN LAST 5 OVERS IN SINGLE INNINGS

a = df.filter(df.over.isin(15,16,17,18,19))
a.groupby(['id', 'over', 'batting_team']).sum('total_runs').orderBy('sum(total_runs)').tail(5)

 [Row(id=1082592, over=19, batting_team='Mumbai Indians', sum(total_runs)=30),
 Row(id=980987, over=18, batting_team='Royal Challengers Bangalore', sum(total_runs)=30),
 Row(id=1216527, over=17, batting_team='Rajasthan Royals', sum(total_runs)=30),
 Row(id=1216493, over=19, batting_team='Delhi Capitals', sum(total_runs)=30),
 Row(id=1216496, over=19, batting_team='Rajasthan Royals', sum(total_runs)=30)]
------------------------------------------------------------------------------------------------------------

Q) FIND THE HIGHEST RUN SCORED BY TEAM IN SINGLE OVER , MENTION BOWLING TEAM AND OTHER INFO

 df.groupby(['id','over','batting_team','bowling_team']).sum('total_runs').orderBy('sum(total_runs)').tail(1)

[Row(id=501247, over=2, batting_team='Royal Challengers Bangalore', bowling_team='Kochi Tuskers Kerala', sum(total_runs)=37)]

------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 OVERS WHERE MOST OF THE WICKETS WERE TAKEN

a = df.filter('is_wicket == 1')
a.groupby('over').count().orderBy('count').tail(5)

[Row(over=15, count=544),
 Row(over=16, count=572),
 Row(over=17, count=733),
 Row(over=18, count=750),
 Row(over=19, count=954)]
------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 BATSMAN WHO HAS SCORED MAXIMUM RUNS IN LAST 5 OVERS

a = df.filter(df.over.isin(15,16,17,18,19))
a.groupby('batsman').sum('batsman_runs').orderBy('sum(batsman_runs)').tail(5)

 [Row(batsman='V Kohli', sum(batsman_runs)=1265),
 Row(batsman='RG Sharma', sum(batsman_runs)=1478),
 Row(batsman='AB de Villiers', sum(batsman_runs)=1662),
 Row(batsman='KA Pollard', sum(batsman_runs)=1782),
 Row(batsman='MS Dhoni', sum(batsman_runs)=2769)]
------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 BATSMAN WHO HAS SCORED MAXIMUM RUNS IN FIRST 5 OVERS

a = df.filter(df.over.isin(0,1,2,3,4,5))
a.groupby('batsman').sum('batsman_runs').orderBy('sum(batsman_runs)').tail(5)

 [Row(batsman='AM Rahane', sum(batsman_runs)=1949),
 Row(batsman='G Gambhir', sum(batsman_runs)=2277),
 Row(batsman='CH Gayle', sum(batsman_runs)=2305),
 Row(batsman='DA Warner', sum(batsman_runs)=2572),
 Row(batsman='S Dhawan', sum(batsman_runs)=2639)]
------------------------------------------------------------------------------------------------------------

Q) FIND THE MATCH IDS WHERE  MORE THAN 230 BALLS WERE PLAYED

a = df.groupby('id').count()
b = a.filter('count >= 230')
b.select('id').distinct().count()

/* 675 GAMES WERE PLAYED WHERE TOTAL BALLS WERE MORE THAN 230 */
------------------------------------------------------------------------------------------------------------
Q) FIND THE MATCH IDS WHERE ALL 40 (20+20) OVERS WERE PLAYED 

a = df.groupby('id').count()
b = a.filter('count >= 240')
b.select('id').distinct().count()

/* 535 GAMES WHERE MORE THAN 240 BALLS WERE PLAYED */
------------------------------------------------------------------------------------------------------------

Q) WRITE A QUERY TO GET ENTRIRE HISTORY OF KINGS XI PUNJAB TOTAL RUNS SCORED ETC

a = df.filter(df.batting_team == 'Kings XI Punjab')
a.groupby(['id','bowling_team']).sum('total_runs').orderBy('sum(total_runs)').show()

829785|Royal Challengers...|             88|
| 392234| Chennai Super Kings|             92|
| 336022|    Delhi Daredevils|             94|
| 829753| Chennai Super Kings|             95|
| 598003|       Pune Warriors|            100|
| 392183|    Delhi Daredevils|            104|

------------------------------------------------------------------------------------------------------------

Q) WRITE A QUERY TO GET ENTRIRE HISTORY OF KINGS XI PUNJAB TOTAL RUNS SCORED ETC AND ALSO ADD IN HOW MNAY BALLS 
WERE PLAYED IN THAT INNING

a = df.filter(df.batting_team == 'Kings XI Punjab')
runs = a.groupby(['id','bowling_team']).sum('total_runs').orderBy('sum(total_runs)')
balls = a.groupby(['id']).count()

joined_df = runs.join(balls , runs.id == balls.id)
joined_df.show()

+------+--------------------+---------------+------+-----+
|    id|        bowling_team|sum(total_runs)|    id|count|
+------+--------------------+---------------+------+-----+
|392222|      Mumbai Indians|            119|392222|  130|
|392226|    Delhi Daredevils|            123|392226|  122|
|392186|Kolkata Knight Ri...|            158|392186|  127|
|419112|Royal Challengers...|            203|419112|  130|
|335991|      Mumbai Indians|            182|335991|  124|
|419146|      Mumbai Indians|            158|419146|  119|
|392234| Chennai Super Kings|             92|392234|  123|
|419117|     Deccan Chargers|            164|419117|  122|
------------------------------------------------------------------------------------------------------------

Q) FIND THE MATCH ID , OVER WHERE EXTRA BALLS WERE MINIMUM.

a = df.filter('extra_runs == 0')
b = a.groupby(['id']).count().orderBy('count').tail(5)
b

 [Row(id=1216525, count=239),
 Row(id=1136618, count=239),
 Row(id=1136604, count=239),
 Row(id=1136580, count=240),
 Row(id=1178393, count=240)]

------------------------------------------------------------------------------------------------------------

Q) FIND THE 5 BOWLERS WHO HAVE GIVEN MAXIMUM EXTRA RUNS

a = df.filter('extra_runs <> 0')
b = a.groupby('bowler').sum('total_runs').orderBy('sum(total_runs)').tail(5)
b

[Row(bowler='I Sharma', sum(total_runs)=221),
 Row(bowler='DJ Bravo', sum(total_runs)=227),
 Row(bowler='P Kumar', sum(total_runs)=236),
 Row(bowler='UT Yadav', sum(total_runs)=259),
 Row(bowler='SL Malinga', sum(total_runs)=311)]
------------------------------------------------------------------------------------------------------------

Q) WRITE A QUERY TO USE LIST FOR ISIN OPERATOR AND NOT IS IN OPEARATOR
NOTE : HERE WE ARE FETCHING THE BOWLERS WHO HAVE GIVEN MAX NUMBER OF EXTRA RUNS MENTIONED IN LIST

a = df.filter( df.extra_runs.isin('noballs','penalty','wides','byes','legbyes'))
b = a.groupby(['bowler']).count().orderBy('count')
b.tail(5)

a = df.filter(~ df.extra_runs.isin('noballs','penalty','wides','byes','legbyes'))   /* ~ stands for not in */
b = a.groupby(['bowler']).count().orderBy('count')
b.tail(5)

------------------------------------------------------------------------------------------------------------

Q) 


